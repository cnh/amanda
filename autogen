#!/bin/sh

# This script is Free Software.

# Please refer to http://www.gnu.ai.mit.edu/copyleft/gpl.html for full
# license information.

# by Alexandre Oliva <oliva@dcc.unicamp.br>

# This script updates automatically generated files if needed

# Arguments to this program are passed on to `make'

# The current directory must be the root directory of the source tree.

# Makefiles with automatic dependency tracking will only be created if
# GNU Make can be found.  Unfortunately, dependencies generated by
# this script will not contain config.h, as config.h does not exist
# yet, and HAVE_CONFIG_H is not defined.

makefilename=/tmp/Makefile.tmp.$$

trap 'rm -f $makefilename $missingfiles; exit 1' 0 1 2 15

: ${top_srcdir=`pwd`}

# if MAKE is not set, try to find GNU Make

case "$MAKE" in "")
  for MAKE in gmake gnumake make; do
    case `{ $MAKE --version; } 2>&1` in "GNU Make"*) break;; esac
  done
  ;;
esac

# if MAKE is set to GNU Make, generate Makefiles with automatic
# source dependency tracking; otherwise, don't.

case `$MAKE --version 2>&1` in
"GNU Make"*) : ${AUTOMAKE="automake"};;
*) : ${AUTOMAKE="automake -i"};;
esac

genmakefile () {
  if [ ! -f $srcdir/Makefile.in ]; then
    echo ${AUTOMAKE} --foreign $srcdir/Makefile
    eval ${AUTOMAKE} '--foreign $srcdir/Makefile'
  fi
  srcdir=$top_srcdir/$srcdir
  sed <$srcdir/Makefile.in >$makefilename \
    -e s/@SET_MAKE@/MAKE=${MAKE}/ \
    -e s/@srcdir@/`echo $srcdir | sed s%/%\\\\\\\\/%g`/ \
    -e s/@top_srcdir@/`echo $top_srcdir | sed s%/%\\\\\\\\/%g`/ \
    -e s/@AUTOCONF@/${AUTOCONF-autoconf}/ \
    -e s/@AUTOMAKE@/"${AUTOMAKE}"/ \
    -e s/@ACLOCAL@/${ACLOCAL-aclocal}/ \
    -e s/@AUTOHEADER@/${AUTOHEADER-autoheader}/ \
    -e s/@SHELL@/${STDSH-\\/bin\\/sh}/ \
    -e s/@DEFS@// \
    -e s/@CPPFLAGS@// \
    -e s/@CFLAGS@// \
  || { echo "Failed to generate $makefilename" && exit 1; }
}

# Ensure that the following files are present, so that the Makefile
# contains rules to rebuild them.
missingfiles=
for f in aclocal.m4 configure config.h.in; do
  if [ ! -f $f ]; then touch $f; missingfiles="$missingfiles $f"; fi
done

# Will rebuild the makefile if necessary
srcdir=.
genmakefile

# Cleans up files that were missing, so that they are rebuilt correctly
rm -f $missingfiles
missingfiles=

$MAKE -f $makefilename \
  $top_srcdir/aclocal.m4 $srcdir/configure $srcdir/config.h.in ||
exit 1

find . -name Makefile.am -print | while read f; do
    (srcdir=`dirname $f` &&
     genmakefile &&
     cd $srcdir &&
     $MAKE -f $makefilename $srcdir/Makefile.in)
done

trap '' 0
rm -f $makefilename
exit 0
